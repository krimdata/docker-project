version: '3.8'

services:
  mysql-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  flask-app:
    build: ./app
    environment:
      - DB_HOST=mysql-db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=testdb
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/clients"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  flask-public:
    build: ./app
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=testdb
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/clients"]
      interval: 10s
      timeout: 5s
      retries: 5

  smoke-test:
    image: curlimages/curl
    depends_on:
      mysql-db:
        condition: service_healthy
      flask-public:
        condition: service_healthy
    entrypoint: ["sh", "-c"]
    command: ["curl -f http://flask-public:5000/clients"]
    networks:
      - app-net

volumes:
  db_data:

networks:
  app-net:

